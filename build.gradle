/*
 * build.gradle
 * ============================================================================
 * Customers API Lite microservice prototype. Version 0.0.1
 * ============================================================================
 * A Spring Boot-based application, designed and intended to be run
 * as a microservice, implementing a special Customers API prototype
 * with a smart yet simplified data scheme.
 * ============================================================================
 * (See the LICENSE file at the top of the source tree.)
 */

plugins {
    // This project is a Java application.
    id 'java'

    // This project is a Spring Boot-based application.
    id 'org.springframework.boot'        version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Web - to run a RESTful web service.
    implementation('org.springframework.boot:spring-boot-starter-web') {
        // Exclude Apache Tomcat which is bundled by default.
        exclude group:  'org.springframework.boot',
                module: 'spring-boot-starter-tomcat'
    }

    // Spring Boot Starter JDBC - to establish HikariCP JDBC connection pool.
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // Spring Boot Starter Undertow - to startup and run Undertow web server.
    implementation 'org.springframework.boot:spring-boot-starter-undertow'

    // SQLite JDBC - to utilize JDBC driver and library for SQLite database.
    implementation 'org.xerial:sqlite-jdbc:3.46.1.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group       = 'com.customers.proto'
version     = '0.0.1'
description = 'Customers API Lite microservice prototype.'

// vim:set nu et ts=4 sw=4:
