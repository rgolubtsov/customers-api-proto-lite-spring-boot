/*
 * build.gradle
 * ============================================================================
 * Customers API Lite microservice prototype. Version 0.3.1
 * ============================================================================
 * A Spring Boot-based application, designed and intended to be run
 * as a microservice, implementing a special Customers API prototype
 * with a smart yet simplified data scheme.
 * ============================================================================
 * (See the LICENSE file at the top of the source tree.)
 */

plugins {
    // This project is a Java application.
    id 'java'

    // This project is a Spring Boot-based application.
    id 'org.springframework.boot'        version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations.implementation {
    // Exclude Logback Classic Module globally due to utilizing
    // the SLF4J Reload4j Provider instead.
    exclude group:  'ch.qos.logback',
            module: 'logback-classic'
}

dependencies {
    // Spring Boot Starter Web - to run a RESTful web service.
    implementation('org.springframework.boot:spring-boot-starter-web') {
        // Exclude Apache Tomcat which is bundled by default.
        exclude group:  'org.springframework.boot',
                module: 'spring-boot-starter-tomcat'
    }

    // Spring Boot Starter Undertow - to startup and run Undertow web server.
    implementation('org.springframework.boot:spring-boot-starter-undertow') {
        // Exclude Undertow WebSockets JSR356 Impl to suppress warning
        // regarding not setting the WebSockets buffer pool.
        exclude group:  'io.undertow',
                module: 'undertow-websockets-jsr'
    }

    // SLF4J Reload4j Provider - to utilize SLF4J logger using Log4j.
    implementation 'org.slf4j:slf4j-reload4j:2.0.17'

    // Syslog4j Graylog2 - to log messages through the Unix system logger.
    implementation 'org.graylog2:syslog4j:0.9.61'

    // JNA (Java Native Access) - as a runtime dependency to Syslog4j.
    implementation 'net.java.dev.jna:jna:5.17.0'

    // Spring Boot Starter JDBC - to establish HikariCP JDBC connection pool.
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // SQLite JDBC - to utilize JDBC driver and library for SQLite database.
    implementation 'org.xerial:sqlite-jdbc:3.50.3.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

group       = 'com.customers.proto'
version     = '0.3.1'
description = 'Customers API Lite microservice prototype.'

// vim:set nu et ts=4 sw=4:
